// <auto-generated />
using System;
using DonghuaFlix.Backend.src.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DonghuaFlix.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250521172329_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("DonghuaFlix.Backend.src.Core.Domain.Entities.Donghua", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Genres")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sinopse")
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Studio")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Donghuas", (string)null);
                });

            modelBuilder.Entity("DonghuaFlix.Backend.src.Core.Domain.Entities.Episode", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DonghuaId")
                        .HasColumnType("TEXT");

                    b.Property<TimeSpan>("Duration")
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DonghuaId");

                    b.ToTable("Episodes", (string)null);
                });

            modelBuilder.Entity("DonghuaFlix.Backend.src.Core.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Visistante");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(1);

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DonghuaFlix.Backend.src.Core.Domain.Entities.Episode", b =>
                {
                    b.OwnsOne("DonghuaFlix.Backend.src.Core.Domain.Entities.VideoAsset", "Video", b1 =>
                        {
                            b1.Property<Guid>("EpisodeId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("CaminhoStorage")
                                .IsRequired()
                                .HasMaxLength(500)
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("CreatedAt")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("DataUpload")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("Id")
                                .HasColumnType("TEXT");

                            b1.Property<DateTime?>("UpdatedAt")
                                .HasColumnType("TEXT");

                            b1.HasKey("EpisodeId");

                            b1.ToTable("VideoAssets", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("EpisodeId");

                            b1.OwnsMany("DonghuaFlix.Backend.src.Core.Domain.ValueObjects.VideoManifest", "Manifests", b2 =>
                                {
                                    b2.Property<Guid>("VideoAssetId")
                                        .HasColumnType("TEXT");

                                    b2.Property<Guid>("Id")
                                        .ValueGeneratedOnAdd()
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("CodecPrincipal")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("TEXT");

                                    b2.Property<string>("Protocolo")
                                        .IsRequired()
                                        .HasMaxLength(10)
                                        .HasColumnType("TEXT");

                                    b2.HasKey("VideoAssetId", "Id");

                                    b2.ToTable("VideoManifests", (string)null);

                                    b2.WithOwner()
                                        .HasForeignKey("VideoAssetId");

                                    b2.OwnsMany("DonghuaFlix.Backend.src.Core.Domain.ValueObjects.VideoQualityProfile", "Qualities", b3 =>
                                        {
                                            b3.Property<Guid>("VideoAssetId")
                                                .HasColumnType("TEXT");

                                            b3.Property<Guid>("ManifestId")
                                                .HasColumnType("TEXT");

                                            b3.Property<Guid>("Id")
                                                .ValueGeneratedOnAdd()
                                                .HasColumnType("TEXT");

                                            b3.Property<int>("Bitrate")
                                                .HasColumnType("INTEGER");

                                            b3.Property<string>("Codec")
                                                .IsRequired()
                                                .HasMaxLength(20)
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("Path")
                                                .IsRequired()
                                                .HasMaxLength(500)
                                                .HasColumnType("TEXT");

                                            b3.Property<string>("Quality")
                                                .IsRequired()
                                                .HasMaxLength(20)
                                                .HasColumnType("TEXT");

                                            b3.HasKey("VideoAssetId", "ManifestId", "Id");

                                            b3.ToTable("VideoQualityProfiles", (string)null);

                                            b3.WithOwner()
                                                .HasForeignKey("VideoAssetId", "ManifestId");
                                        });

                                    b2.Navigation("Qualities");
                                });

                            b1.Navigation("Manifests");
                        });

                    b.Navigation("Video")
                        .IsRequired();
                });

            modelBuilder.Entity("DonghuaFlix.Backend.src.Core.Domain.Entities.User", b =>
                {
                    b.OwnsOne("DonghuaFlix.Backend.src.Core.Domain.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Valor")
                                .IsRequired()
                                .HasMaxLength(254)
                                .HasColumnType("TEXT")
                                .HasColumnName("Email");

                            b1.HasKey("UserId");

                            b1.HasIndex("Valor")
                                .IsUnique();

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsMany("DonghuaFlix.Backend.src.Core.Domain.ValueObjects.Favorite", "Favorites", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("DonghuaId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("DateCreat")
                                .HasColumnType("TEXT");

                            b1.HasKey("UserId", "DonghuaId");

                            b1.ToTable("UserFavorites", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsMany("DonghuaFlix.Backend.src.Core.Domain.ValueObjects.History", "Histories", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("TEXT");

                            b1.Property<Guid>("EpisodeId")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("TEXT");

                            b1.Property<DateTime>("DateVisualization")
                                .HasColumnType("TEXT");

                            b1.HasKey("UserId", "EpisodeId");

                            b1.ToTable("UserHistories", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.OwnsOne("DonghuaFlix.Backend.src.Core.Domain.ValueObjects.Password", "Password", b1 =>
                        {
                            b1.Property<Guid>("UserId")
                                .HasColumnType("TEXT");

                            b1.Property<string>("Value")
                                .IsRequired()
                                .HasMaxLength(60)
                                .HasColumnType("TEXT")
                                .HasColumnName("PasswordHash");

                            b1.HasKey("UserId");

                            b1.ToTable("Users");

                            b1.WithOwner()
                                .HasForeignKey("UserId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Favorites");

                    b.Navigation("Histories");

                    b.Navigation("Password")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
